---
import BarMenuElement from "../../components/common/BarMenuElement.astro"
import BarMenuElementDropdown from "../../components/common/BarMenuElementDropdown.astro"
import { getAllProducts } from '../../services/products'
import type { Product, Service } from "../../utilities/types"

export interface Props {
    currentPage: string
}

const { currentPage } = Astro.props
const products: Array<Product> = getAllProducts()
const services: Array<Service> = [
    { id: "reciclaje_integral", name: "reciclaje integral" },
    { id: "inyeccion_plastico", name: "inyección de plástico" },
    { id: "logistica", name: "logística" },
    { id: "personalizacion", name: "personalización" }
]
---

<div id="barmenu" class="fixed top-0 w-full overflow-visible z-20 transition-all duration-300 bg-reciclacel_dark_blue">
    <div class="max-w-full xl:max-w-7xl 2xl:max-w-[95.5rem] 3xl:max-w-[120rem] mx-auto py-4 2xl:py-6 3xl:py-8 px-5 flex justify-between items-center">
        <img class="h-12 2xl:h-16 3xl:h-20" src="/svg/logo.svg" alt="logo">
        <nav class="w-fit hidden lg:flex items-center">
            <ul class="flex gap-10">
                <BarMenuElement link={{link: "/", text: "inicio"}} name="inicio" currentPage={currentPage} />
                <BarMenuElementDropdown link={{link: "javascript:void(0);", text: "productos"}} name="productos" elements={products} currentPage={currentPage} children="producto" />
                <BarMenuElementDropdown link={{link: "/servicios", text: "servicios"}} name="servicios" elements={services} currentPage={currentPage} children="servicios" />
                <BarMenuElement link={{link: "/empresa", text: "empresa"}} name="empresa" currentPage={currentPage} />
                <BarMenuElement link={{link: "/cotiza", text: "cotiza"}} name="cotiza" currentPage={currentPage} />
                <BarMenuElement link={{link: "/blog", text: "blog"}} name="blog" currentPage={currentPage} />
            </ul>
        </nav>
        <button id="hamburguer_menu_button" class="h-7 w-8 flex lg:hidden flex-col items-end justify-between">
            <span class="h-[3px] w-1/2 duration-300 transition-[width] bg-white"></span>
            <span class="h-[3px] w-full bg-white"></span>
            <span class="h-[3px] w-1/2 duration-300 transition-[width] bg-white"></span>
            <span class="h-[3px] w-full bg-white"></span>
        </button>
    </div>
</div>

<script>
    const hamburguerMenuButton = document.querySelector("#hamburguer_menu_button") as HTMLInputElement
    const barmenu = document.querySelector("#barmenu") as HTMLElement
    const fullmenu = document.querySelector("#fullmenu") as HTMLDivElement
    const firstLineHamburguerMenuButton = hamburguerMenuButton.querySelector(':nth-child(1)') as HTMLDivElement
    const thirdtLineHamburguerMenuButton = hamburguerMenuButton.querySelector(':nth-child(3)') as HTMLDivElement
    let lastYPos: number = window.scrollY

    const changeColorBarMenu: Function = () => {
        if(scrollY <= 0){
            barmenu.classList.remove('bg-reciclacel_dark_blue')
            barmenu.classList.add('bg-transparent')
        } else {
            barmenu.classList.add('bg-reciclacel_dark_blue')
            barmenu.classList.remove('bg-transparent')
        }
    }

    changeColorBarMenu()

    window.onscroll = () => {
        const currentYPos: number = window.scrollY

        changeColorBarMenu()

        if(!(hamburguerMenuButton.querySelector(':nth-child(1)') as HTMLDivElement).classList.contains("w-full")){
            if(!(scrollY > 0 && scrollY < 200)){
            if(currentYPos > lastYPos){
                barmenu.style.top = '-100px'
            } else {
                barmenu.style.top = '0'
            }
        }
        }
        lastYPos = currentYPos
    }

    window.onresize = () => {
        if(fullmenu.classList.contains('visible')){
            fullmenu.classList.add('opacity-0')
            fullmenu.classList.remove('opacity-100')
            fullmenu.classList.add('invisible')
            fullmenu.classList.remove('visible')
            firstLineHamburguerMenuButton.classList.toggle('w-full')
            thirdtLineHamburguerMenuButton.classList.toggle('w-full')
        }
    }

    hamburguerMenuButton.onclick = () => {
        firstLineHamburguerMenuButton.classList.toggle('w-full')
        thirdtLineHamburguerMenuButton.classList.toggle('w-full')
        if(fullmenu.classList.contains('opacity-0')){
            fullmenu.classList.remove('invisible')
            fullmenu.classList.add('visible')
            fullmenu.classList.remove('opacity-0')
            fullmenu.classList.add('opacity-100')
        } else {
            fullmenu.classList.add('opacity-0')
            fullmenu.classList.remove('opacity-100')
            fullmenu.classList.add('invisible')
            fullmenu.classList.remove('visible')
        }
    }
</script>



